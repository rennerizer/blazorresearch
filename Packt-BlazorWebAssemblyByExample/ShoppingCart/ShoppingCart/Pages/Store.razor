@page "/store"

@using ShoppingCart.Models
@using ShoppingCart.Services

@inject NavigationManager Navigation
@inject HttpClient Http
@inject ICartService CartService

<PageTitle>Store</PageTitle>

<ol class="breadcrumb bg-light">
    <li class="breadcrumb-item">
        <a href="#">Home</a>
    </li>
    <li class="breadcrumb-item active">
        Store
    </li>
</ol>

@if (_products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1 class="display-3">Products</h1>

    <div class="row">
        <div id="products" class="col-xl-4 col-lg-6">
            <table width="100%">
                @foreach (Product item in _products)
                {
                    <tr>
                        <td>
                            <img src="images/@item.Image" />
                        </td>
                        <td class="align-middle">
                            @item.ProductName
                        </td>
                        <td class="align-middle">
                            $@item.Price
                        </td>
                        <td class="align-middle">
                            <button type="button" class="btn btn-danger" @onclick="@(() => CartService.AddProduct(item))">
                                Add to Cart
                            </button>
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div id="cart" class="col-xl-3 col-lg-4">
            @if (CartService.Cart.Any())
            {
                <h2>Your Cart</h2>
                <ul class="list-group">
                    @foreach (Product item in CartService.Cart)
                    {
                        <li class="list-group-item p-2">
                            <button type="button" class="btn btn-sm btn-danger me-2" @onclick="@(() => CartService.DeleteProduct(item))">
                                Delete
                            </button>

                            @item.ProductName - $@item.Price
                        </li>
                    }
                </ul>

                <div class="p-2">
                    <h3>Total: $@CartService.Total</h3>
                </div>
            }
        </div> 
    </div>
}

@code {
    private IList<Product>? _products;

    protected override async Task OnInitializedAsync()
    {
        _products = await Http.GetFromJsonAsync<Product[]>("sample-data/products.json");
    }
}
